# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    OpenAPI spec version: v1.15.6
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'time': 'str',
        'probes': 'int',
        'interval': 'str'
    }

    attribute_map = {
        'time': 'time',
        'probes': 'probes',
        'interval': 'interval'
    }

    def __init__(self, time=None, probes=None, interval=None):  # noqa: E501
        """IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive - a model defined in OpenAPI"""  # noqa: E501

        self._time = None
        self._probes = None
        self._interval = None
        self.discriminator = None

        if time is not None:
            self.time = time
        if probes is not None:
            self.probes = probes
        if interval is not None:
            self.interval = interval

    @property
    def time(self):
        """Gets the time of this IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive.  # noqa: E501

        The time duration a connection needs to be idle before keep-alive probes start being sent. Default is to use the OS level configuration (unless overridden, Linux defaults to 7200s (ie 2 hours.)  # noqa: E501

        :return: The time of this IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive.  # noqa: E501
        :rtype: str
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive.

        The time duration a connection needs to be idle before keep-alive probes start being sent. Default is to use the OS level configuration (unless overridden, Linux defaults to 7200s (ie 2 hours.)  # noqa: E501

        :param time: The time of this IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive.  # noqa: E501
        :type: str
        """

        self._time = time

    @property
    def probes(self):
        """Gets the probes of this IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive.  # noqa: E501

        Maximum number of keepalive probes to send without response before deciding the connection is dead. Default is to use the OS level configuration (unless overridden, Linux defaults to 9.)  # noqa: E501

        :return: The probes of this IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive.  # noqa: E501
        :rtype: int
        """
        return self._probes

    @probes.setter
    def probes(self, probes):
        """Sets the probes of this IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive.

        Maximum number of keepalive probes to send without response before deciding the connection is dead. Default is to use the OS level configuration (unless overridden, Linux defaults to 9.)  # noqa: E501

        :param probes: The probes of this IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive.  # noqa: E501
        :type: int
        """

        self._probes = probes

    @property
    def interval(self):
        """Gets the interval of this IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive.  # noqa: E501

        The time duration between keep-alive probes. Default is to use the OS level configuration (unless overridden, Linux defaults to 75s.)  # noqa: E501

        :return: The interval of this IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive.  # noqa: E501
        :rtype: str
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive.

        The time duration between keep-alive probes. Default is to use the OS level configuration (unless overridden, Linux defaults to 75s.)  # noqa: E501

        :param interval: The interval of this IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive.  # noqa: E501
        :type: str
        """

        self._interval = interval

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IstioNetworkingV1alpha3ConnectionPoolSettingsTCPSettingsTcpKeepalive):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
