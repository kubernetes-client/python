# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    OpenAPI spec version: v1.15.6
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class IstioNetworkingV1alpha3HTTPRedirect(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'uri': 'str',
        'authority': 'str',
        'redirect_code': 'int'
    }

    attribute_map = {
        'uri': 'uri',
        'authority': 'authority',
        'redirect_code': 'redirectCode'
    }

    def __init__(self, uri=None, authority=None, redirect_code=None):  # noqa: E501
        """IstioNetworkingV1alpha3HTTPRedirect - a model defined in OpenAPI"""  # noqa: E501

        self._uri = None
        self._authority = None
        self._redirect_code = None
        self.discriminator = None

        if uri is not None:
            self.uri = uri
        if authority is not None:
            self.authority = authority
        if redirect_code is not None:
            self.redirect_code = redirect_code

    @property
    def uri(self):
        """Gets the uri of this IstioNetworkingV1alpha3HTTPRedirect.  # noqa: E501

        On a redirect, overwrite the Path portion of the URL with this value. Note that the entire path will be replaced, irrespective of the request URI being matched as an exact path or prefix.  # noqa: E501

        :return: The uri of this IstioNetworkingV1alpha3HTTPRedirect.  # noqa: E501
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this IstioNetworkingV1alpha3HTTPRedirect.

        On a redirect, overwrite the Path portion of the URL with this value. Note that the entire path will be replaced, irrespective of the request URI being matched as an exact path or prefix.  # noqa: E501

        :param uri: The uri of this IstioNetworkingV1alpha3HTTPRedirect.  # noqa: E501
        :type: str
        """

        self._uri = uri

    @property
    def authority(self):
        """Gets the authority of this IstioNetworkingV1alpha3HTTPRedirect.  # noqa: E501

        On a redirect, overwrite the Authority/Host portion of the URL with this value.  # noqa: E501

        :return: The authority of this IstioNetworkingV1alpha3HTTPRedirect.  # noqa: E501
        :rtype: str
        """
        return self._authority

    @authority.setter
    def authority(self, authority):
        """Sets the authority of this IstioNetworkingV1alpha3HTTPRedirect.

        On a redirect, overwrite the Authority/Host portion of the URL with this value.  # noqa: E501

        :param authority: The authority of this IstioNetworkingV1alpha3HTTPRedirect.  # noqa: E501
        :type: str
        """

        self._authority = authority

    @property
    def redirect_code(self):
        """Gets the redirect_code of this IstioNetworkingV1alpha3HTTPRedirect.  # noqa: E501

        On a redirect, Specifies the HTTP status code to use in the redirect response. The default response code is MOVED_PERMANENTLY (301).  # noqa: E501

        :return: The redirect_code of this IstioNetworkingV1alpha3HTTPRedirect.  # noqa: E501
        :rtype: int
        """
        return self._redirect_code

    @redirect_code.setter
    def redirect_code(self, redirect_code):
        """Sets the redirect_code of this IstioNetworkingV1alpha3HTTPRedirect.

        On a redirect, Specifies the HTTP status code to use in the redirect response. The default response code is MOVED_PERMANENTLY (301).  # noqa: E501

        :param redirect_code: The redirect_code of this IstioNetworkingV1alpha3HTTPRedirect.  # noqa: E501
        :type: int
        """

        self._redirect_code = redirect_code

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IstioNetworkingV1alpha3HTTPRedirect):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
