# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.25
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from kubernetes.client import schemas  # noqa: F401


class V1HorizontalPodAutoscalerSpec(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    specification of a horizontal pod autoscaler.
    """


    class MetaOapg:
        required = {
            "maxReplicas",
            "scaleTargetRef",
        }
        
        class properties:
            maxReplicas = schemas.Int32Schema
        
            @staticmethod
            def scaleTargetRef() -> typing.Type['V1CrossVersionObjectReference']:
                return V1CrossVersionObjectReference
            minReplicas = schemas.Int32Schema
            targetCPUUtilizationPercentage = schemas.Int32Schema
            __annotations__ = {
                "maxReplicas": maxReplicas,
                "scaleTargetRef": scaleTargetRef,
                "minReplicas": minReplicas,
                "targetCPUUtilizationPercentage": targetCPUUtilizationPercentage,
            }
    
    maxReplicas: MetaOapg.properties.maxReplicas
    scaleTargetRef: 'V1CrossVersionObjectReference'
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maxReplicas"]) -> MetaOapg.properties.maxReplicas: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["scaleTargetRef"]) -> 'V1CrossVersionObjectReference': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["minReplicas"]) -> MetaOapg.properties.minReplicas: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["targetCPUUtilizationPercentage"]) -> MetaOapg.properties.targetCPUUtilizationPercentage: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["maxReplicas", "scaleTargetRef", "minReplicas", "targetCPUUtilizationPercentage", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maxReplicas"]) -> MetaOapg.properties.maxReplicas: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["scaleTargetRef"]) -> 'V1CrossVersionObjectReference': ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["minReplicas"]) -> typing.Union[MetaOapg.properties.minReplicas, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["targetCPUUtilizationPercentage"]) -> typing.Union[MetaOapg.properties.targetCPUUtilizationPercentage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["maxReplicas", "scaleTargetRef", "minReplicas", "targetCPUUtilizationPercentage", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        maxReplicas: typing.Union[MetaOapg.properties.maxReplicas, decimal.Decimal, int, ],
        scaleTargetRef: 'V1CrossVersionObjectReference',
        minReplicas: typing.Union[MetaOapg.properties.minReplicas, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        targetCPUUtilizationPercentage: typing.Union[MetaOapg.properties.targetCPUUtilizationPercentage, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'V1HorizontalPodAutoscalerSpec':
        return super().__new__(
            cls,
            *args,
            maxReplicas=maxReplicas,
            scaleTargetRef=scaleTargetRef,
            minReplicas=minReplicas,
            targetCPUUtilizationPercentage=targetCPUUtilizationPercentage,
            _configuration=_configuration,
            **kwargs,
        )

from kubernetes.client.model.v1_cross_version_object_reference import V1CrossVersionObjectReference
