# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.25
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from client import schemas  # noqa: F401


class V2HPAScalingRules(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    HPAScalingRules configures the scaling behavior for one direction. These Rules are applied after calculating DesiredReplicas from metrics for the HPA. They can limit the scaling velocity by specifying scaling policies. They can prevent flapping by specifying the stabilization window, so that the number of replicas is not set instantly, instead, the safest value from the stabilization window is chosen.
    """


    class MetaOapg:
        
        class properties:
            
            
            class policies(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['V2HPAScalingPolicy']:
                        return V2HPAScalingPolicy
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['V2HPAScalingPolicy'], typing.List['V2HPAScalingPolicy']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'policies':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'V2HPAScalingPolicy':
                    return super().__getitem__(i)
            selectPolicy = schemas.StrSchema
            stabilizationWindowSeconds = schemas.Int32Schema
            __annotations__ = {
                "policies": policies,
                "selectPolicy": selectPolicy,
                "stabilizationWindowSeconds": stabilizationWindowSeconds,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["policies"]) -> MetaOapg.properties.policies: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["selectPolicy"]) -> MetaOapg.properties.selectPolicy: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stabilizationWindowSeconds"]) -> MetaOapg.properties.stabilizationWindowSeconds: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["policies", "selectPolicy", "stabilizationWindowSeconds", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["policies"]) -> typing.Union[MetaOapg.properties.policies, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["selectPolicy"]) -> typing.Union[MetaOapg.properties.selectPolicy, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stabilizationWindowSeconds"]) -> typing.Union[MetaOapg.properties.stabilizationWindowSeconds, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["policies", "selectPolicy", "stabilizationWindowSeconds", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        policies: typing.Union[MetaOapg.properties.policies, list, tuple, schemas.Unset] = schemas.unset,
        selectPolicy: typing.Union[MetaOapg.properties.selectPolicy, str, schemas.Unset] = schemas.unset,
        stabilizationWindowSeconds: typing.Union[MetaOapg.properties.stabilizationWindowSeconds, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'V2HPAScalingRules':
        return super().__new__(
            cls,
            *args,
            policies=policies,
            selectPolicy=selectPolicy,
            stabilizationWindowSeconds=stabilizationWindowSeconds,
            _configuration=_configuration,
            **kwargs,
        )

from client.model.v2_hpa_scaling_policy import V2HPAScalingPolicy
