# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.25
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from kubernetes.client import schemas  # noqa: F401


class V1ListMeta(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
    """


    class MetaOapg:
        
        class properties:
            _continue = schemas.StrSchema
            remainingItemCount = schemas.Int64Schema
            resourceVersion = schemas.StrSchema
            selfLink = schemas.StrSchema
            __annotations__ = {
                "continue": _continue,
                "remainingItemCount": remainingItemCount,
                "resourceVersion": resourceVersion,
                "selfLink": selfLink,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["continue"]) -> MetaOapg.properties._continue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["remainingItemCount"]) -> MetaOapg.properties.remainingItemCount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["resourceVersion"]) -> MetaOapg.properties.resourceVersion: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["selfLink"]) -> MetaOapg.properties.selfLink: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["continue", "remainingItemCount", "resourceVersion", "selfLink", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["continue"]) -> typing.Union[MetaOapg.properties._continue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["remainingItemCount"]) -> typing.Union[MetaOapg.properties.remainingItemCount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["resourceVersion"]) -> typing.Union[MetaOapg.properties.resourceVersion, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["selfLink"]) -> typing.Union[MetaOapg.properties.selfLink, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["continue", "remainingItemCount", "resourceVersion", "selfLink", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        remainingItemCount: typing.Union[MetaOapg.properties.remainingItemCount, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        resourceVersion: typing.Union[MetaOapg.properties.resourceVersion, str, schemas.Unset] = schemas.unset,
        selfLink: typing.Union[MetaOapg.properties.selfLink, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'V1ListMeta':
        return super().__new__(
            cls,
            *args,
            remainingItemCount=remainingItemCount,
            resourceVersion=resourceVersion,
            selfLink=selfLink,
            _configuration=_configuration,
            **kwargs,
        )
