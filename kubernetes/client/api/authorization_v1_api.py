"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.18
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from kubernetes.client.api_client import ApiClient, Endpoint as _Endpoint
from kubernetes.client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from kubernetes.client.model.v1_api_resource_list import V1APIResourceList
from kubernetes.client.model.v1_local_subject_access_review import V1LocalSubjectAccessReview
from kubernetes.client.model.v1_self_subject_access_review import V1SelfSubjectAccessReview
from kubernetes.client.model.v1_self_subject_rules_review import V1SelfSubjectRulesReview
from kubernetes.client.model.v1_subject_access_review import V1SubjectAccessReview


class AuthorizationV1Api(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        def __create_namespaced_local_subject_access_review(
            self,
            namespace,
            body,
            **kwargs
        ):
            """create_namespaced_local_subject_access_review  # noqa: E501

            create a LocalSubjectAccessReview  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.create_namespaced_local_subject_access_review(namespace, body, async_req=True)
            >>> result = thread.get()

            Args:
                namespace (str): object name and auth scope, such as for teams and projects
                body (V1LocalSubjectAccessReview):

            Keyword Args:
                dry_run (str): When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed. [optional]
                field_manager (str): fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.. [optional]
                pretty (str): If 'true', then the output is pretty printed.. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                V1LocalSubjectAccessReview
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['namespace'] = \
                namespace
            kwargs['body'] = \
                body
            return self.call_with_http_info(**kwargs)

        self.create_namespaced_local_subject_access_review = _Endpoint(
            settings={
                'response_type': (V1LocalSubjectAccessReview,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/apis/authorization.k8s.io/v1/namespaces/{namespace}/localsubjectaccessreviews',
                'operation_id': 'create_namespaced_local_subject_access_review',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'namespace',
                    'body',
                    'dry_run',
                    'field_manager',
                    'pretty',
                ],
                'required': [
                    'namespace',
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'namespace':
                        (str,),
                    'body':
                        (V1LocalSubjectAccessReview,),
                    'dry_run':
                        (str,),
                    'field_manager':
                        (str,),
                    'pretty':
                        (str,),
                },
                'attribute_map': {
                    'namespace': 'namespace',
                    'dry_run': 'dryRun',
                    'field_manager': 'fieldManager',
                    'pretty': 'pretty',
                },
                'location_map': {
                    'namespace': 'path',
                    'body': 'body',
                    'dry_run': 'query',
                    'field_manager': 'query',
                    'pretty': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/yaml',
                    'application/vnd.kubernetes.protobuf'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__create_namespaced_local_subject_access_review
        )

        def __create_self_subject_access_review(
            self,
            body,
            **kwargs
        ):
            """create_self_subject_access_review  # noqa: E501

            create a SelfSubjectAccessReview  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.create_self_subject_access_review(body, async_req=True)
            >>> result = thread.get()

            Args:
                body (V1SelfSubjectAccessReview):

            Keyword Args:
                dry_run (str): When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed. [optional]
                field_manager (str): fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.. [optional]
                pretty (str): If 'true', then the output is pretty printed.. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                V1SelfSubjectAccessReview
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['body'] = \
                body
            return self.call_with_http_info(**kwargs)

        self.create_self_subject_access_review = _Endpoint(
            settings={
                'response_type': (V1SelfSubjectAccessReview,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/apis/authorization.k8s.io/v1/selfsubjectaccessreviews',
                'operation_id': 'create_self_subject_access_review',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'body',
                    'dry_run',
                    'field_manager',
                    'pretty',
                ],
                'required': [
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'body':
                        (V1SelfSubjectAccessReview,),
                    'dry_run':
                        (str,),
                    'field_manager':
                        (str,),
                    'pretty':
                        (str,),
                },
                'attribute_map': {
                    'dry_run': 'dryRun',
                    'field_manager': 'fieldManager',
                    'pretty': 'pretty',
                },
                'location_map': {
                    'body': 'body',
                    'dry_run': 'query',
                    'field_manager': 'query',
                    'pretty': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/yaml',
                    'application/vnd.kubernetes.protobuf'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__create_self_subject_access_review
        )

        def __create_self_subject_rules_review(
            self,
            body,
            **kwargs
        ):
            """create_self_subject_rules_review  # noqa: E501

            create a SelfSubjectRulesReview  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.create_self_subject_rules_review(body, async_req=True)
            >>> result = thread.get()

            Args:
                body (V1SelfSubjectRulesReview):

            Keyword Args:
                dry_run (str): When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed. [optional]
                field_manager (str): fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.. [optional]
                pretty (str): If 'true', then the output is pretty printed.. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                V1SelfSubjectRulesReview
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['body'] = \
                body
            return self.call_with_http_info(**kwargs)

        self.create_self_subject_rules_review = _Endpoint(
            settings={
                'response_type': (V1SelfSubjectRulesReview,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/apis/authorization.k8s.io/v1/selfsubjectrulesreviews',
                'operation_id': 'create_self_subject_rules_review',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'body',
                    'dry_run',
                    'field_manager',
                    'pretty',
                ],
                'required': [
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'body':
                        (V1SelfSubjectRulesReview,),
                    'dry_run':
                        (str,),
                    'field_manager':
                        (str,),
                    'pretty':
                        (str,),
                },
                'attribute_map': {
                    'dry_run': 'dryRun',
                    'field_manager': 'fieldManager',
                    'pretty': 'pretty',
                },
                'location_map': {
                    'body': 'body',
                    'dry_run': 'query',
                    'field_manager': 'query',
                    'pretty': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/yaml',
                    'application/vnd.kubernetes.protobuf'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__create_self_subject_rules_review
        )

        def __create_subject_access_review(
            self,
            body,
            **kwargs
        ):
            """create_subject_access_review  # noqa: E501

            create a SubjectAccessReview  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.create_subject_access_review(body, async_req=True)
            >>> result = thread.get()

            Args:
                body (V1SubjectAccessReview):

            Keyword Args:
                dry_run (str): When present, indicates that modifications should not be persisted. An invalid or unrecognized dryRun directive will result in an error response and no further processing of the request. Valid values are: - All: all dry run stages will be processed. [optional]
                field_manager (str): fieldManager is a name associated with the actor or entity that is making these changes. The value must be less than or 128 characters long, and only contain printable characters, as defined by https://golang.org/pkg/unicode/#IsPrint.. [optional]
                pretty (str): If 'true', then the output is pretty printed.. [optional]
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                V1SubjectAccessReview
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['body'] = \
                body
            return self.call_with_http_info(**kwargs)

        self.create_subject_access_review = _Endpoint(
            settings={
                'response_type': (V1SubjectAccessReview,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/apis/authorization.k8s.io/v1/subjectaccessreviews',
                'operation_id': 'create_subject_access_review',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'body',
                    'dry_run',
                    'field_manager',
                    'pretty',
                ],
                'required': [
                    'body',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'body':
                        (V1SubjectAccessReview,),
                    'dry_run':
                        (str,),
                    'field_manager':
                        (str,),
                    'pretty':
                        (str,),
                },
                'attribute_map': {
                    'dry_run': 'dryRun',
                    'field_manager': 'fieldManager',
                    'pretty': 'pretty',
                },
                'location_map': {
                    'body': 'body',
                    'dry_run': 'query',
                    'field_manager': 'query',
                    'pretty': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/yaml',
                    'application/vnd.kubernetes.protobuf'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__create_subject_access_review
        )

        def __get_api_resources(
            self,
            **kwargs
        ):
            """get_api_resources  # noqa: E501

            get available resources  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.get_api_resources(async_req=True)
            >>> result = thread.get()


            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (float/tuple): timeout setting for this request. If one
                    number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                V1APIResourceList
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            return self.call_with_http_info(**kwargs)

        self.get_api_resources = _Endpoint(
            settings={
                'response_type': (V1APIResourceList,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/apis/authorization.k8s.io/v1/',
                'operation_id': 'get_api_resources',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                },
                'attribute_map': {
                },
                'location_map': {
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json',
                    'application/yaml',
                    'application/vnd.kubernetes.protobuf'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__get_api_resources
        )
