# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.17
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.v1_volume_projection import V1VolumeProjection  # noqa: E501
from kubernetes.client.rest import ApiException

class TestV1VolumeProjection(unittest.TestCase):
    """V1VolumeProjection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V1VolumeProjection
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.v1_volume_projection.V1VolumeProjection()  # noqa: E501
        if include_optional :
            return V1VolumeProjection(
                config_map = kubernetes.client.models.v1/config_map_projection.v1.ConfigMapProjection(
                    items = [
                        kubernetes.client.models.v1/key_to_path.v1.KeyToPath(
                            key = '0', 
                            mode = 56, 
                            path = '0', )
                        ], 
                    name = '0', 
                    optional = True, ), 
                downward_api = kubernetes.client.models.v1/downward_api_projection.v1.DownwardAPIProjection(
                    items = [
                        kubernetes.client.models.v1/downward_api_volume_file.v1.DownwardAPIVolumeFile(
                            field_ref = kubernetes.client.models.v1/object_field_selector.v1.ObjectFieldSelector(
                                api_version = '0', 
                                field_path = '0', ), 
                            mode = 56, 
                            path = '0', 
                            resource_field_ref = kubernetes.client.models.v1/resource_field_selector.v1.ResourceFieldSelector(
                                container_name = '0', 
                                divisor = '0', 
                                resource = '0', ), )
                        ], ), 
                secret = kubernetes.client.models.v1/secret_projection.v1.SecretProjection(
                    items = [
                        kubernetes.client.models.v1/key_to_path.v1.KeyToPath(
                            key = '0', 
                            mode = 56, 
                            path = '0', )
                        ], 
                    name = '0', 
                    optional = True, ), 
                service_account_token = kubernetes.client.models.v1/service_account_token_projection.v1.ServiceAccountTokenProjection(
                    audience = '0', 
                    expiration_seconds = 56, 
                    path = '0', )
            )
        else :
            return V1VolumeProjection(
        )

    def testV1VolumeProjection(self):
        """Test V1VolumeProjection"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
