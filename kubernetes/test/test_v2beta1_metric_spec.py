# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.17
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.v2beta1_metric_spec import V2beta1MetricSpec  # noqa: E501
from kubernetes.client.rest import ApiException

class TestV2beta1MetricSpec(unittest.TestCase):
    """V2beta1MetricSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test V2beta1MetricSpec
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.v2beta1_metric_spec.V2beta1MetricSpec()  # noqa: E501
        if include_optional :
            return V2beta1MetricSpec(
                external = kubernetes.client.models.v2beta1/external_metric_source.v2beta1.ExternalMetricSource(
                    metric_name = '0', 
                    metric_selector = kubernetes.client.models.v1/label_selector.v1.LabelSelector(
                        match_expressions = [
                            kubernetes.client.models.v1/label_selector_requirement.v1.LabelSelectorRequirement(
                                key = '0', 
                                operator = '0', 
                                values = [
                                    '0'
                                    ], )
                            ], 
                        match_labels = {
                            'key' : '0'
                            }, ), 
                    target_average_value = '0', 
                    target_value = '0', ), 
                object = kubernetes.client.models.v2beta1/object_metric_source.v2beta1.ObjectMetricSource(
                    average_value = '0', 
                    metric_name = '0', 
                    selector = kubernetes.client.models.v1/label_selector.v1.LabelSelector(
                        match_expressions = [
                            kubernetes.client.models.v1/label_selector_requirement.v1.LabelSelectorRequirement(
                                key = '0', 
                                operator = '0', 
                                values = [
                                    '0'
                                    ], )
                            ], 
                        match_labels = {
                            'key' : '0'
                            }, ), 
                    target = kubernetes.client.models.v2beta1/cross_version_object_reference.v2beta1.CrossVersionObjectReference(
                        api_version = '0', 
                        kind = '0', 
                        name = '0', ), 
                    target_value = '0', ), 
                pods = kubernetes.client.models.v2beta1/pods_metric_source.v2beta1.PodsMetricSource(
                    metric_name = '0', 
                    selector = kubernetes.client.models.v1/label_selector.v1.LabelSelector(
                        match_expressions = [
                            kubernetes.client.models.v1/label_selector_requirement.v1.LabelSelectorRequirement(
                                key = '0', 
                                operator = '0', 
                                values = [
                                    '0'
                                    ], )
                            ], 
                        match_labels = {
                            'key' : '0'
                            }, ), 
                    target_average_value = '0', ), 
                resource = kubernetes.client.models.v2beta1/resource_metric_source.v2beta1.ResourceMetricSource(
                    name = '0', 
                    target_average_utilization = 56, 
                    target_average_value = '0', ), 
                type = '0'
            )
        else :
            return V2beta1MetricSpec(
                type = '0',
        )

    def testV2beta1MetricSpec(self):
        """Test V2beta1MetricSpec"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
