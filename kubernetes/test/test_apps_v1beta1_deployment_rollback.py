# coding: utf-8

"""
    Kubernetes

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: release-1.17
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import kubernetes.client
from kubernetes.client.models.apps_v1beta1_deployment_rollback import AppsV1beta1DeploymentRollback  # noqa: E501
from kubernetes.client.rest import ApiException

class TestAppsV1beta1DeploymentRollback(unittest.TestCase):
    """AppsV1beta1DeploymentRollback unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AppsV1beta1DeploymentRollback
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = kubernetes.client.models.apps_v1beta1_deployment_rollback.AppsV1beta1DeploymentRollback()  # noqa: E501
        if include_optional :
            return AppsV1beta1DeploymentRollback(
                api_version = '0', 
                kind = '0', 
                name = '0', 
                rollback_to = kubernetes.client.models.apps/v1beta1/rollback_config.apps.v1beta1.RollbackConfig(
                    revision = 56, ), 
                updated_annotations = {
                    'key' : '0'
                    }
            )
        else :
            return AppsV1beta1DeploymentRollback(
                name = '0',
                rollback_to = kubernetes.client.models.apps/v1beta1/rollback_config.apps.v1beta1.RollbackConfig(
                    revision = 56, ),
        )

    def testAppsV1beta1DeploymentRollback(self):
        """Test AppsV1beta1DeploymentRollback"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
